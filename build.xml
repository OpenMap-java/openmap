<?xml version="1.0"?>
<project name="OpenMap" default="all" basedir=".">

	<!--  ############################
	Set up the different builds.
	############################ -->

	<target name="init" description="Sets properties needed by the other targets.">

		<property name="openmap.home" value="." />

		<property name="general.excludes" value="**/*.in, **/Makefile, **/*.bat,
		                             **/ChangeLog, **/*.html, **/*.txt,
					     **/*.*.txt, **/*.dat,
					     **/*.pl, **/unimplemented/**, **/build.xml" />

		<property name="javac.excludes" value="${general.excludes}, 
					   **/*.gif, **/*.png, **/IntersectionTest.java" />
		<property name="mac.app" value="OpenMap.app" />
		<property name="jar.excludes" value="${general.excludes}, **/*.java" />
		<property name="openmap_version" value="6.0b" />
		<property name="core.src" value="${openmap.home}/src/core" />
		<property name="ommaptile.src" value="${openmap.home}/src/maptileservlet" />
		<property name="openmap_dist.dir" value="${openmap.home}/dist" />
		<property name="openmap_mac_dist.dir" value="${openmap_dist.dir}/OpenMap_${openmap_version}" />
		<property name="openmap_release.dir" value="${openmap_dist.dir}/openmap-${openmap_version}" />
		<property name="openmap.zip" value="${openmap_dist.dir}/openmap-${openmap_version}.zip" />
		<property name="macJavaStub" value="/System/Library/Frameworks/JavaVM.framework/Resources/MacOS/JavaApplicationStub" />

		<!-- Whatever you put in value will be passed to compiler.-->
		<!--		<property name="compiler.args" value="-Xlint:deprecation,unchecked"/>-->
		<property name="compiler.args" value="-nowarn" />

		<available file="${macJavaStub}" property="do.copyMacJavaStub" />

		<!-- ################################
		You can add path to external jars here, comma separated in the includes list.  This covers 
		the jars in the external libraries. 
		#########################  -->
		<path id="ext_tools_classpath">
			<fileset dir="ext" includes="**/*.jar" />
		</path>

		<echo message="Building with ${java.home}" />

	</target>

	<!--  ############################
	Main targets
	############################ -->

	<target name="classes" depends="init" description="Compiles all OpenMap classes.">
		<antcall target="core" />
		<antcall target="maptileservlet" />
	</target>

	<target name="core" depends="init" description="Compiles core OpenMap classes.">
		<ant antfile="${core.src}/build.xml" target="classes" />
	</target>

	<target name="maptileservlet" depends="init" description="Compiles map tile servlet classes.">
		<ant antfile="${ommaptile.src}/src/maptileservlet/build.xml" target="classes" />
	</target>

	<target name="jars" depends="classes" description="Compiles OpenMap and alternative package classes.">
		<ant antfile="${core.src}/build.xml" target="jar" inheritRefs="true" />
		<ant antfile="${ommaptile.src}/build.xml" target="jar" inheritRefs="true" />
	</target>

	<target name="geo" depends="init" description="Compiles Geo dist package and creates omgeo.jar.">
		<ant antfile="${core.src}/build.xml" target="jar.geo" inheritRefs="true" />
	</target>

	<target name="all" depends="init" description="Compiles OpenMap classes and creates the jar files.">
		<ant antfile="${core.src}/build.xml" target="all" inheritRefs="true" />
		<ant antfile="${ommaptile.src}/build.xml" target="all" inheritRefs="true" />
	</target>

	<target name="docs" depends="init" description="Creates OpenMap API documentation.">
		<ant antfile="${core.src}/build.xml" target="docs.core" inheritRefs="true" />
		<ant antfile="${ommaptile.src}/build.xml" target="docs" inheritRefs="true" />
	</target>

	<!--  ############################
	Cleanup targets
	############################ -->
	<target name="clean_all" depends="clean" description="Delete jar files, class files, and generated documentation.">
		<delete dir="${mac.app}" />
		<delete dir="${openmap_dist.dir}" />
	</target>

	<target name="clean" depends="init" description="Delete jar files and all class files.">
		<ant antfile="${core.src}/build.xml" target="clean" inheritRefs="true" />
		<ant antfile="${ommaptile.src}/build.xml" target="clean" inheritRefs="true" />
	</target>

	<target name="distclean" depends="init" description="Delete class files, but not the jar files.">
		<ant antfile="${core.src}/build.xml" target="distclean" inheritRefs="true" />
		<ant antfile="${ommaptile.src}/build.xml" target="distclean" inheritRefs="true" />
	</target>

	<target name="clean_jars" depends="init" description="Delete only the jar files from the lib directory.">
		<ant antfile="${core.src}/build.xml" target="jarclean" inheritRefs="true" />
	</target>

	<target name="clean_docs" depends="init" description="Delete only the generated API documentation.">
		<ant antfile="${core.src}/build.xml" target="docsclean" inheritRefs="true" />
	</target>

	<!--  ############################
	End of cleanup targets.
	############################ -->

	<!-- depends="jar" -->
	<target name="run" depends="init" description="Run the OpenMap application.">
		<java classname="com.bbn.openmap.app.OpenMap" classpath="lib/openmap.jar;lib/milStd2525_png.jar;share" fork="yes">
			<classpath>
				<path refid="ext_tools_classpath" />
				<pathelement path="${openmap.home}/lib/openmap.jar" />
				<pathelement path="${openmap.home}/lib/milStd2525_png.jar" />
				<pathelement path="${openmap.home}/share" />
			</classpath>
		</java>
	</target>

	<!--
	<target name="mac" depends="all" description="Create MacOS X application.">
		<delete dir="${mac.app}" />

		<copy todir="${mac.app}">
			<fileset dir="${openmap.home}/src/mac/OpenMap.app" />
		</copy>

		<copy todir="${mac.app}/Contents/Resources">
			<fileset dir="${openmap.home}/share" includes="**/data/**" />
		</copy>

		<copy todir="${mac.app}/Contents/Resources" file="${openmap.home}/openmap.properties" />

		<copy todir="${mac.app}/Contents/Resources/Java">
			<fileset dir="${openmap.home}/lib" includes="**/*.jar" />
		</copy>

		<antcall target="copyMacJavaStub" />

		<replace file="${mac.app}/Contents/Info.plist" token="@version@" value="${openmap_version}" />

		<chmod file="${mac.app}/Contents/MacOS/JavaApplicationStub" perm="ugo+rx" />
		<chmod dir="${mac.app}" perm="ugo+rx" />
	</target>

	<target name="copyMacJavaStub" if="${do.copyMacJavaStub}">
		<copy file="${macJavaStub}" todir="${mac.app}/contents/MacOS" />
	</target>
-->
	<target name="dist" description="Create a directory containing the OpenMap release package." depends="init">
		<delete dir="${openmap_dist.dir}" />
		<property name="install_excludes" value="**/CVS, **/.svn, **/.DS_Store, **/*~, dist/**" />
		<copy file="${openmap.home}/bin/openmap.bat" tofile="${openmap_release.dir}/openmap.bat" />
		<copy file="${openmap.home}/bin/openmap" tofile="${openmap_release.dir}/openmap" />
		<copy file="${openmap.home}/openmap.properties" tofile="${openmap_release.dir}/openmap.properties" />
		<copy todir="${openmap_release.dir}">
			<fileset dir="${openmap.home}">
				<include name="openmap.properties" />
				<include name="README" />
				<include name="AUTHORS" />
				<include name="CHANGELOG" />
				<include name="INSTALL*" />
				<include name="LICENSE" />
				<include name="build.xml" />
				<include name="version.txt" />
			</fileset>
		</copy>
		<copy todir="${openmap_release.dir}/src">
			<fileset dir="${openmap.home}/src" excludes="**/target/**, ${install_excludes}" />
		</copy>
		<copy todir="${openmap_release.dir}/lib">
			<fileset dir="${openmap.home}/lib" excludes="${install_excludes}" />
		</copy>
		<copy todir="${openmap_release.dir}/lib" flatten="true">
			<fileset dir="${openmap.home}/src" includes="**/target/*.jar" />
		</copy>
		<copy todir="${openmap_release.dir}/share">
			<fileset dir="${openmap.home}/share" excludes="${install_excludes}" />
		</copy>
		<zip destfile="${openmap.zip}" basedir="${openmap_release.dir}" includes="**" />

		<!--		<ant target="zip" />-->

		<!--
		<copy todir="${openmap_mac_dist.dir}/${mac.app}">
		  <fileset dir="${mac.app}" />
		</copy>
		<copy file="openmap.properties" todir="${openmap_mac_dist.dir}" />
		<chmod file="${openmap_mac_dist.dir}/${mac.app}/Contents/MacOS/JavaApplicationStub" perm="ugo+rx" />
		<chmod dir="${openmap_mac_dist.dir}/${mac.app}" perm="ugo+rx" />
-->

		<!-- Remove top level mac app, the one to use for the release is in the dist directory -->
		<delete dir="${mac.app}" />
	</target>

	<!--	<target name="zip" description="Create a OpenMap package zip file." depends="init">

	</target>
-->

</project>

